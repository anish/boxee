--- ./xbmc/FileSystem/FileCurl.cpp.orig	2009-06-18 15:56:29.000000000 -0400
+++ ./xbmc/FileSystem/FileCurl.cpp	2009-07-21 04:16:18.000000000 -0400
@@ -81,14 +81,6 @@
 }
 
 /* curl calls this routine to get more data */
-extern "C" size_t dummy_callback(char *buffer,
-                                 size_t size,
-                                 size_t nitems,
-                                 void *userp)
-{
-  return 0;  
-}
-
 extern "C" size_t write_callback(char *buffer,
                size_t size,
                size_t nitems,
@@ -293,10 +285,6 @@
     m_fileSize = m_filePos + (__int64)length;
   }
 
-  char *url = NULL; 
-  if (CURLE_OK == g_curlInterface.easy_getinfo(m_easyHandle, CURLINFO_EFFECTIVE_URL, (char*)&url))
-    m_strEffectiveUrl = url;
-    
   long response;
   if (CURLE_OK == g_curlInterface.easy_getinfo(m_easyHandle, CURLINFO_RESPONSE_CODE, &response))
     return response;
@@ -810,8 +798,6 @@
     throw new CRedirectException(new CFileShoutcast); 
   }
 
-  m_url = m_state->m_strEffectiveUrl;
-  
   m_multisession = false;
   if(m_url.Left(5).Equals("http:") || m_url.Left(6).Equals("https:"))
   {
@@ -1111,7 +1096,7 @@
   
   // only attempt to fill buffer if transactions still running and buffer
   // doesnt exceed required size already
-  while ((unsigned int)m_buffer.GetMaxReadSize() < want && m_buffer.GetMaxWriteSize() > 0 && !g_application.m_bStop)
+  while ((unsigned int)m_buffer.GetMaxReadSize() < want && m_buffer.GetMaxWriteSize() > 0 )
   {
     if (m_cancelled)
       return false;
@@ -1157,13 +1142,13 @@
         while((msg = g_curlInterface.multi_info_read(m_multiHandle, &msgs)))
         {
           long nRet=200;
-	        curl_easy_getinfo(msg->easy_handle, CURLINFO_RESPONSE_CODE, &nRet);
+	      curl_easy_getinfo(msg->easy_handle, CURLINFO_RESPONSE_CODE, &nRet);
           if (nRet == 416) 
           {
             //m_seekable = false;
             return false;
           }
-          
+
           if (msg->msg == CURLMSG_DONE)
           {
             if (msg->data.result == CURLE_OK)